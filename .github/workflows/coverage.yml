name: Code Coverage

on: [push, pull_request]

env:
  RUST_TEST_TIME_UNIT: 150,5000
  RUST_TEST_TIME_INTEGRATION: 150,5000

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    # We want to run on external PRs, but not on internal ones as push automatically builds
    # H/T: https://github.com/Dart-Code/Dart-Code/commit/612732d5879730608baa9622bf7f5e5b7b51ae65
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != 'partiql/partiql-lang-rust'
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          # nightly can be very volatile--pin this to a version we know works well...
          toolchain: nightly-2022-08-11
      # Conformance tests are run with 'conformance_test' feature. Since step runs with 'all-features', the conformance
      # test are also run, which can cause `cargo test` to fail. Add 'continue-on-error' step to prevent GH Actions
      # failure.
      - name: Cargo Test
        continue-on-error: true
        run: cargo test --verbose --workspace --all-features --no-fail-fast -- -Z unstable-options --ensure-time
        env:
          CARGO_INCREMENTAL: '0'
          # https://github.com/marketplace/actions/rust-grcov
          # For some reason the panic=abort modes don't work for build script...
          #RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          #RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
      - id: coverage
        name: Code Coverage
        uses: actions-rs/grcov@v0.1
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          files: ${{ steps.coverage.outputs.report }}
