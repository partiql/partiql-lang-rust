name: CI Build

on: [push, pull_request]

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    # We want to run on external PRs, but not on internal ones as push automatically builds
    # H/T: https://github.com/Dart-Code/Dart-Code/commit/612732d5879730608baa9622bf7f5e5b7b51ae65
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != 'partiql/partiql-lang-rust'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Remove MSys64 MingW64 Binaries
        if: runner.os == 'Windows'
        # remove this because there is a bad libclang.dll that confuses bindgen
        run: Remove-Item -LiteralPath "C:\msys64\mingw64\bin" -Force -Recurse
      - name: Install Dependencies
        if: runner.os == 'Windows'
        run: choco install llvm -y
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Cargo Build 
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --workspace
      - name: Cargo Test excluding conformance tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --workspace
      # Currently just runs the conformance tests. Further conformance report generation will be part of
      # https://github.com/partiql/partiql-lang-rust/issues/79.
      # Uses the 'continue-on-error' workflow syntax which means the GitHub Actions build will succeed even if the
      # workflow step failed. Results are still viewable (example run:
      # https://github.com/partiql/partiql-lang-rust/runs/6186121711?check_suite_focus=true#step:8:686)
      # More details on the 'continue-on-error' workflow syntax can be found here:
      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idcontinue-on-error
      - name: Cargo Test of the conformance tests (can fail)
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: test
          args: --verbose --package partiql-conformance-tests --features "conformance_test"
      - name: Rustfmt Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --verbose -- --check
      # `clippy-check` will run `cargo clippy` on new pull requests. Due to a limitation in GitHub
      # permissions, the behavior of the Action is different depending on the source of the PR. If the
      # PR comes from the partiql-lang-rust project itself, any suggestions will be added to the PR as comments.
      # If the PR comes from a fork, any suggestions will be added to the Action's STDOUT for review.
      # For details, see: https://github.com/actions-rs/clippy-check/issues/2
      - name: Install Clippy
        # The clippy check depends on setup steps defined above, but we don't want it to run
        # for every OS because it posts its comments to the PR. These `if` checks limit clippy to
        # only running on the Linux test. (The choice of OS was arbitrary.)
        if: matrix.os == 'ubuntu-latest'
        run: rustup component add clippy
      - name: Run Clippy
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/clippy-check@v1
        with:
          # Adding comments to the PR requires the GITHUB_TOKEN secret.
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
