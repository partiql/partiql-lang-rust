%YAML 1.2
# See https://www.sublimetext.com/docs/syntax.htm
---
name: partiql
version: "2"
file_extensions:
  - partiql
scope: source.partiql
contexts:
  keywords:
    - match: "\\b(?i:missing)\\b"
      scope: constant.language.partiql
    - match: "\\b(?i:false|null|true)\\b"
      scope: constant.language.partiql
    - match: "\\b(?i:pivot|unpivot|limit|tuple|remove|index|conflict|do|nothing|returning|modified|new|old|let)\\b"
      scope: keyword.other.partiql
    - match: "\\b(?i:absolute|action|add|all|allocate|alter|and|any|are|as|asc|assertion|at|authorization|begin|between|bit_length|by|cascade|cascaded|case|catalog|char|character_length|char_length|check|close|collate|collation|column|commit|connect|connection|constraint|constraints|continue|convert|corresponding|create|cross|current|cursor|deallocate|dec|declare|default|deferrable|deferred|delete|desc|describe|descriptor|diagnostics|disconnect|distinct|domain|drop|else|end|end-exec|escape|except|exception|exec|execute|external|extract|fetch|first|for|foreign|found|from|full|get|global|go|goto|grant|group|having|identity|immediate|in|indicator|initially|inner|input|insensitive|insert|intersect|interval|into|is|isolation|join|key|language|last|left|level|like|local|lower|match|module|names|national|natural|nchar|next|no|not|octet_length|of|on|only|open|option|or|order|outer|output|overlaps|pad|partial|position|precision|prepare|preserve|primary|prior|privileges|procedure|public|read|real|references|relative|restrict|revoke|right|rollback|rows|schema|scroll|section|select|session|set|size|some|space|sql|sqlcode|sqlerror|sqlstate|table|temporary|then|time|to|transaction|translate|translation|union|unique|unknown|update|upper|usage|user|using|value|values|view|when|whenever|where|with|work|write|zone)\\b"
      scope: keyword.other.partiql
    - match: "\\b(?i:bool|boolean|string|symbol|clob|blob|struct|list|sexp|bag)\\b"
      scope: storage.type.partiql
    - match: "\\b(?i:character|date|decimal|double|float|int|integer|numeric|smallint|timestamp|varchar|varying)\\b"
      scope: storage.type.partiql
    - match: "\\b(?i:avg|count|max|min|sum)\\b"
      scope: support.function.aggregation.partiql
    - match: "\\b(?i:cast|coalesce|current_date|current_time|current_timestamp|current_user|exists|date_add|date_diff|nullif|session_user|substring|system_user|trim)\\b"
      scope: support.function.partiql
  main:
    - include: whitespace
    - include: comment
    - include: value
  value:
    - include: whitespace
    - include: comment
    - include: tuple_value
    - include: collection_value
    - include: scalar_value
  scalar_value:
    - include: string
    - include: number
    - include: keywords
    - include: identifier
    - match: "`"
      captures:
        0: punctuation.definition.ion.begin.partiql
      embed: "scope:source.ion"
      escape: "`"
      escape_captures:
        0: punctuation.definition.ion.end.partiql
    - include: operator
    - include: punctuation
  punctuation:
    - match: "[;:()\\[\\]\\{\\},.]"
      scope: punctuation.partiql
  operator:
    - match: "[+*\\/<>=~!@#%&|?^-]+"
      scope: keyword.operator.partiql
  identifier:
    - match: "([\"])((?:(?:\\\\.)|(?:[^\"\\\\]))*?)([\"])"
      scope: variable.language.identifier.quoted.partiql
    - match: "@\\w+"
      scope: variable.language.identifier.at.partiql
    - match: "\\b\\w+(?:\\.\\w+)?\\b"
      scope: variable.language.identifier.partiql
  number:
    - match: "[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b"
      scope: constant.numeric.partiql
  string:
    - match: "(['])((?:(?:\\\\.)|(?:[^'\\\\]))*?)(['])"
      captures:
        1: punctuation.definition.string.begin.partiql
        2: string.quoted.single.partiql
        3: punctuation.definition.string.end.partiql
  collection_value:
    - include: array_value
    - include: bag_value
  bag_value:
    - match: "<<"
      scope: punctuation.definition.bag.begin.partiql
      push: bag_value__0
  bag_value__0:
    - match: ">>"
      scope: punctuation.definition.bag.end.partiql
      pop: true
    - include: comment
    - match: ","
      scope: punctuation.definition.bag.separator.partiql
    - include: value
  comment:
    - match: "--.*"
      scope: comment.line.partiql
    - match: "\\/\\*"
      scope: comment.block.partiql
      push: comment__1
  comment__1:
    - match: "[*]\\/"
      scope: comment.block.partiql
      pop: true
    - match: "[^*\\/]+"
      scope: comment.block.partiql
    - match: "\\/\\*"
      scope: comment.block.partiql
      push: comment__1
    - match: "[*\\/]+"
      scope: comment.block.partiql
  array_value:
    - match: "\\["
      scope: punctuation.definition.array.begin.partiql
      push: array_value__0
  array_value__0:
    - match: "\\]"
      scope: punctuation.definition.array.end.partiql
      pop: true
    - include: comment
    - match: ","
      scope: punctuation.definition.array.separator.partiql
    - include: value
  tuple_value:
    - match: "\\{"
      scope: punctuation.definition.tuple.begin.partiql
      push: tuple_value__0
  tuple_value__0:
    - match: "\\}"
      scope: punctuation.definition.tuple.end.partiql
      pop: true
    - include: comment
    - match: ",|:"
      scope: punctuation.definition.tuple.separator.partiql
    - include: value
  whitespace:
    - match: "\\s+"
      scope: text.partiql